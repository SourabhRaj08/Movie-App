{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sourabh\\\\Desktop\\\\Movie\\\\movie\\\\src\\\\FavMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FavMovie() {\n  _s();\n  const [fav, setFav] = useState([]);\n  const favoriteMovieIDs = JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n  useEffect(() => {\n    const fetchAndRenderFavorites = async () => {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=1`);\n        const result = await response.json();\n        const favoriteMovies = result.results.filter(movie => favoriteMovieIDs.some(([_, movieId]) => movieId === movie.id));\n        setFav(favoriteMovies);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchAndRenderFavorites();\n  }, [favoriteMovieIDs]); // Update on favoriteMovieIDs change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favorite Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), favoriteMovieIDs.length > 0 ? /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: fav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No movies selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(FavMovie, \"hBrXSwo3RoTwMBDO8I2tvWc/NXE=\");\n_c = FavMovie;\nvar _c;\n$RefreshReg$(_c, \"FavMovie\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","jsxDEV","_jsxDEV","Fragment","_Fragment","FavMovie","_s","fav","setFav","favoriteMovieIDs","JSON","parse","localStorage","getItem","fetchAndRenderFavorites","response","fetch","result","json","favoriteMovies","results","filter","movie","some","_","movieId","id","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","_c","$RefreshReg$"],"sources":["C:/Users/Sourabh/Desktop/Movie/movie/src/FavMovie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\n\nexport default function FavMovie() {\n  const [fav, setFav] = useState([]);\n  const favoriteMovieIDs = JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n\n  useEffect(() => {\n    const fetchAndRenderFavorites = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=1`\n        );\n        const result = await response.json();\n        const favoriteMovies = result.results.filter((movie) =>\n          favoriteMovieIDs.some(([_, movieId]) => movieId === movie.id)\n        );\n        setFav(favoriteMovies);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchAndRenderFavorites();\n  }, [favoriteMovieIDs]); // Update on favoriteMovieIDs change\n\n  return (\n    <div>\n      <h1>Favorite Movies</h1>\n      {favoriteMovieIDs.length > 0 ? (\n        <MovieList movies={fav} />\n      ) : (\n        <>\n          <h1>No movies selected</h1>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMW,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE;EAEjFd,SAAS,CAAC,MAAM;IACd,MAAMe,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,6GACH,CAAC;QACD,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACpC,MAAMC,cAAc,GAAGF,MAAM,CAACG,OAAO,CAACC,MAAM,CAAEC,KAAK,IACjDb,gBAAgB,CAACc,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,OAAO,CAAC,KAAKA,OAAO,KAAKH,KAAK,CAACI,EAAE,CAC9D,CAAC;QACDlB,MAAM,CAACW,cAAc,CAAC;MACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDb,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACL,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAExB,oBACEP,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBxB,gBAAgB,CAACyB,MAAM,GAAG,CAAC,gBAC1BhC,OAAA,CAACF,SAAS;MAACmC,MAAM,EAAE5B;IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1B/B,OAAA,CAAAE,SAAA;MAAAyB,QAAA,eACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBAC3B,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CAnCuBD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}