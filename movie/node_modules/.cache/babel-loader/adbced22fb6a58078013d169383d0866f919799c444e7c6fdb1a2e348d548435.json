{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sourabh\\\\Desktop\\\\Movie\\\\movie\\\\src\\\\FavMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MovieList from './MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FavMovie() {\n  _s();\n  const [fav, setFav] = useState([]);\n  const favoriteMovieIDs = JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=1`);\n      const result = await response.json();\n      return result.results;\n    } catch (error) {\n      console.error('Error fetching movie data:', error);\n      return []; // Return empty array in case of errors\n    }\n  };\n  const renderFavoriteMovies = async () => {\n    try {\n      const mainMovieList = await fetchMovies();\n      const favoriteMovies = mainMovieList.filter(movie => favoriteMovieIDs.some(id => id === movie.id));\n      setFav(favoriteMovies); // Set fav after data is fetched\n    } catch (error) {\n      console.error('Error filtering favorite movies:', error);\n      setFav([]); // Set fav to empty array on error\n    }\n  };\n\n  // Explicitly await favMovies before rendering\n  renderFavoriteMovies();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favorite Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), favoriteMovieIDs.length > 0 ? /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: fav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No movies selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(FavMovie, \"CwUo9xV3vbwlIHjtIHlNj0LiTBc=\");\n_c = FavMovie;\nvar _c;\n$RefreshReg$(_c, \"FavMovie\");","map":{"version":3,"names":["React","useState","MovieList","jsxDEV","_jsxDEV","Fragment","_Fragment","FavMovie","_s","fav","setFav","favoriteMovieIDs","JSON","parse","localStorage","getItem","fetchMovies","response","fetch","result","json","results","error","console","renderFavoriteMovies","mainMovieList","favoriteMovies","filter","movie","some","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","_c","$RefreshReg$"],"sources":["C:/Users/Sourabh/Desktop/Movie/movie/src/FavMovie.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MovieList from './MovieList';\n\nexport default function FavMovie() {\n  const [fav, setFav] = useState([]);\n\n  const favoriteMovieIDs = JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=1`);\n      const result = await response.json();\n      return result.results;\n    } catch (error) {\n      console.error('Error fetching movie data:', error);\n      return []; // Return empty array in case of errors\n    }\n  };\n\n  const renderFavoriteMovies = async () => {\n    try {\n      const mainMovieList = await fetchMovies();\n      const favoriteMovies = mainMovieList.filter((movie) =>\n        favoriteMovieIDs.some((id) => id === movie.id)\n      );\n      setFav(favoriteMovies); // Set fav after data is fetched\n    } catch (error) {\n      console.error('Error filtering favorite movies:', error);\n      setFav([]); // Set fav to empty array on error\n    }\n  };\n\n  // Explicitly await favMovies before rendering\n  renderFavoriteMovies();\n\n  return (\n    <div>\n      <h1>Favorite Movies</h1>\n      {favoriteMovieIDs.length > 0 ? (\n        <MovieList movies={fav} />\n      ) : (\n        <>\n          <h1>No movies selected</h1>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMU,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE;EAEjF,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6GAA4G,CAAC;MAC3I,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpC,OAAOD,MAAM,CAACE,OAAO;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,EAAE,CAAC,CAAC;IACb;EACF,CAAC;EAED,MAAME,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMT,WAAW,CAAC,CAAC;MACzC,MAAMU,cAAc,GAAGD,aAAa,CAACE,MAAM,CAAEC,KAAK,IAChDjB,gBAAgB,CAACkB,IAAI,CAAEC,EAAE,IAAKA,EAAE,KAAKF,KAAK,CAACE,EAAE,CAC/C,CAAC;MACDpB,MAAM,CAACgB,cAAc,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDZ,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACd;EACF,CAAC;;EAED;EACAc,oBAAoB,CAAC,CAAC;EAEtB,oBACEpB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBxB,gBAAgB,CAACyB,MAAM,GAAG,CAAC,gBAC1BhC,OAAA,CAACF,SAAS;MAACmC,MAAM,EAAE5B;IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1B/B,OAAA,CAAAE,SAAA;MAAAyB,QAAA,eACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBAC3B,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CA5CuBD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}